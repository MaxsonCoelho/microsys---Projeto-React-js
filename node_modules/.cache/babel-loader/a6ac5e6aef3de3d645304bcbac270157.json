{"ast":null,"code":"var _jsxFileName = \"/home/max/Documentos/microsys/src/pages/AddBactery/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport './addBactery.css';\nimport { useHistory } from 'react-router-dom';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Header from '../../components/Header';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport api from '../../services/api';\nimport { AuthContext } from '../../contexts/auth';\nimport { FiUpload } from 'react-icons/fi';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport VersionApp from '../../components/VersionApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddBactery(props) {\n  _s();\n\n  let history = useHistory();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [title, setTitle] = useState('CADASTRAR COLÔNIA BACTERIANA');\n  const [visible, setVisible] = useState(false);\n  const [offSearch, setOffSearch] = useState(false);\n  const [dataMorphological, setDataMorphological] = useState([]);\n  const [dataHost, setDataHost] = useState([]);\n  const [filePhoto, setFilePhoto] = useState();\n  const [filePhotoVerso, setFilePhotoVerso] = useState();\n  const [filePhotoMicro, setFilePhotoMicro] = useState();\n  const [imageUrl, setImageUrl] = useState(null);\n  const [imageVersoUrl, setImageVersoUrl] = useState(null);\n  const [imageMicroUrl, setImageMicroUrl] = useState(null);\n  const [description, setDescription] = useState('');\n  const [collectionPlace, setCollectionPlace] = useState('');\n  const [border, setBorder] = useState('');\n  const [surface, setSurface] = useState('');\n  const [properties, setProperties] = useState('');\n  const [molecularIdentification, setMolecularIdentification] = useState('');\n  const [typeGrowth, setTypeGrowth] = useState('');\n  const [color, setColor] = useState('');\n  const [consistence, setConsistence] = useState('');\n  const [detOpticos, setDetOpticos] = useState('');\n  const [form, setForm] = useState('');\n  const [elevation, setElevation] = useState('');\n  const [dateCollect, setDateCollect] = useState('');\n  const [dateReactvation, setDateReactvation] = useState('');\n  const [spore, setSpore] = useState();\n  const [morphological, setMorphological] = useState('');\n  const [host, setHost] = useState('');\n  const [isolationMedium, setIsolationMedium] = useState('');\n  const [startIncubation, setStartIncubation] = useState(Number);\n  const [code, setCode] = useState('');\n  const [pigment, setPigment] = useState('');\n  const [addMorph, setAddMoph] = useState('');\n  const [addNewHost, setAddNewHost] = useState('');\n  const [openAddMorph, setOpenAddMorph] = useState(false);\n  const [openHost, setOpenHost] = useState(false);\n  const [idMorph, setIdMorph] = useState();\n  const [idHost, setIdHost] = useState();\n  const [idBactery, setIdBactery] = useState('');\n  const [passValidation, setPassValidation] = useState(false);\n\n  function addMorphological() {\n    setOpenAddMorph(true);\n  }\n\n  function addHost() {\n    setOpenHost(true);\n  }\n\n  async function addMorphRequest() {\n    if (addMorph === '') {\n      alert('Preencha o campo de identificação Morfológica');\n      return;\n    }\n\n    try {\n      await api.post('/morfologias', {\n        descricao: addMorph\n      });\n      alert('Cadastro realizado com sucesso!');\n      setOpenAddMorph(false);\n      getMorphological();\n      setAddMoph('');\n    } catch (error) {\n      console.log(error);\n      alert('Essa identificação morfológica já exite!');\n    }\n  }\n\n  async function addHostRequest() {\n    if (addNewHost === '') {\n      alert('Preencha o campo de origem do hospedeiro');\n      return;\n    }\n\n    try {\n      await api.post('/hospedeiros', {\n        descricao: addNewHost\n      });\n      alert('Cadastro realizado com sucesso!');\n      setOpenHost(false);\n      getHost();\n      setAddNewHost('');\n    } catch (error) {\n      console.log(error);\n      alert('Essa identificação morfológica já exite!');\n    }\n  }\n\n  function validationFormBactery(body) {\n    const arrayBody = Object.entries(body);\n    const propEmpty = arrayBody.filter(e => {\n      return e[1] === '';\n    });\n\n    if (propEmpty.length > 0) {\n      const arrayPropEmpty = propEmpty.map(item => {\n        return item[0];\n      });\n      const formatedString = arrayPropEmpty.join(', ').toString();\n      console.log(formatedString);\n      alert(`Preencha os seguintes campos ${formatedString}`);\n      setPassValidation(true);\n    }\n  }\n\n  async function addBactery() {\n    setPassValidation(false);\n\n    if (imageUrl === undefined || imageVersoUrl === undefined || imageMicroUrl === undefined) {\n      return alert('Adicione todas as imagens para continuar o registro deste fungo.');\n    }\n\n    if (morphological === '' || host === '') {\n      return alert('Escolha uma identificação Morfológica e uma Origem para o hospedeiro.');\n    }\n\n    const body = {\n      codigo: code,\n      identMolecular: molecularIdentification,\n      cor: color,\n      pigmento: pigment,\n      consistencia: consistence,\n      detOpticos: detOpticos,\n      forma: form,\n      borda: border,\n      superficie: surface,\n      elevacao: elevation,\n      esporula: spore,\n      tipoCresc: typeGrowth,\n      propriedades: properties,\n      meioIsolamento: isolationMedium,\n      tempIncubacao: startIncubation,\n      descricaoIsolado: description,\n      dataColeta: dateCollect,\n      dataReativacao: dateReactvation,\n      localColeta: collectionPlace,\n      morfologiaId: idMorph[0].id,\n      hospedeiroId: idHost[0].id\n    };\n\n    if (!passValidation) {\n      validationFormBactery(body);\n    } else {\n      return;\n    }\n\n    try {\n      api.defaults.headers.common.Authorization = 'Bearer ' + token;\n      let response = await api.post('/bacterias', body);\n      const result = response.data;\n      const id = result.id;\n      setDescription('');\n      setCollectionPlace('');\n      setBorder('');\n      setSurface('');\n      setProperties('');\n      setMolecularIdentification('');\n      setTypeGrowth('');\n      setColor('');\n      setForm('');\n      setElevation('');\n      setDateCollect('');\n      setConsistence('');\n      setDetOpticos('');\n      setDateReactvation('');\n      setSpore(false);\n      setMorphological('');\n      setHost('');\n      setIsolationMedium('');\n      setStartIncubation(0);\n      setCode('');\n      setPigment('');\n      uploadImages(id);\n      getMorphological();\n      alert('Cadastro realizado com sucesso!');\n      history.push('/colecao-bacteriana');\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n  }\n\n  function handleFileImage(e) {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n\n      if (image.type === 'image/jpeg' || image.type === 'image/png') {\n        setFilePhoto(image);\n        setImageUrl(URL.createObjectURL(e.target.files[0]));\n      } else {\n        alert('Envie uma imagem do tipo PNG ou JPEG');\n        setFilePhoto(null);\n        return null;\n      }\n    }\n  }\n\n  function handleFileImageVerso(e) {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n\n      if (image.type === 'image/jpeg' || image.type === 'image/png') {\n        setFilePhotoVerso(image);\n        setImageVersoUrl(URL.createObjectURL(e.target.files[0]));\n      } else {\n        alert('Envie uma imagem do tipo PNG ou JPEG');\n        setFilePhotoVerso(null);\n        return null;\n      }\n    }\n  }\n\n  function handleFileImageMicro(e) {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n\n      if (image.type === 'image/jpeg' || image.type === 'image/png') {\n        setFilePhotoMicro(image);\n        setImageMicroUrl(URL.createObjectURL(e.target.files[0]));\n      } else {\n        alert('Envie uma imagem do tipo PNG ou JPEG');\n        setFilePhotoMicro(null);\n        return null;\n      }\n    }\n  } //continuar criando upload api\n\n\n  async function handleUpload(idBactery) {\n    const currentUid = idBactery;\n    const body = new FormData();\n    body.append('urlImagem', filePhoto);\n    body.append('urlImagemVerso', filePhotoVerso);\n    body.append('urlImagemMicro', filePhotoMicro);\n\n    try {\n      api.defaults.headers.Authorization = `Bearer ${token}`;\n      await api.patch(`/bacterias/${currentUid}/images`, body);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function uploadImages(idBactery) {\n    if ((filePhoto && filePhotoVerso && filePhotoMicro) !== null) {\n      handleUpload(idBactery);\n    }\n\n    return;\n  }\n\n  async function editBactery() {\n    let body = {\n      codigo: code || props.location.codigo,\n      identMolecular: molecularIdentification || props.location.identMolecular,\n      cor: color || props.location.cor,\n      consistence: consistence || props.location.consistence,\n      detOpticos: detOpticos || props.location.detOpticos,\n      pigmento: pigment || props.location.pigmento,\n      forma: form || props.location.forma,\n      borda: border || props.location.borda,\n      superficie: surface || props.location.superficie,\n      elevacao: elevation || props.location.elevacao,\n      esporula: spore || props.location.esporula,\n      tipoCresc: typeGrowth || props.location.tipoCresc,\n      propriedades: properties || props.location.propriedades,\n      meioIsolamento: isolationMedium || props.location.meioIsolamento,\n      tempIncubacao: startIncubation || props.location.tempIncubacao,\n      descricaoIsolado: description || props.location.descricaoIsolado,\n      dataColeta: dateCollect || props.location.dataColeta,\n      dataReativacao: dateReactvation || props.location.dataReativacao,\n      localColeta: collectionPlace || props.location.localColeta,\n      morfologiaId: props.location.morfologiaId,\n      hospedeiroId: props.location.hospedeiroId\n    };\n\n    try {\n      api.defaults.headers.common.Authorization = 'Bearer ' + token;\n      await api.patch(`/bacterias/${props.location.itemId}`, body);\n      setFilePhoto('');\n      setDescription('');\n      setCollectionPlace('');\n      setBorder('');\n      setSurface('');\n      setProperties('');\n      setMolecularIdentification('');\n      setTypeGrowth('');\n      setColor('');\n      setConsistence('');\n      setDetOpticos('');\n      setForm('');\n      setElevation('');\n      setDateCollect('');\n      setDateReactvation('');\n      setSpore(false);\n      setMorphological('');\n      setHost('');\n      setIsolationMedium('');\n      setStartIncubation(0);\n      setCode('');\n      setPigment('');\n      handleUpload(props.location.itemId);\n      getMorphological();\n      alert('Registro atualizado com sucesso!');\n      history.push('/colecao-bacteriana');\n    } catch (error) {\n      console.log(error);\n      alert('preencha todos os campos');\n      return;\n    }\n  }\n\n  async function getMorphological() {\n    try {\n      let response = await api.get('/morfologias', {\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n          'Accept': '*/*'\n        }\n      });\n      const result = response.data;\n      setDataMorphological(result.reverse());\n    } catch (error) {\n      console.log('erro na listagem:', error);\n    }\n  }\n\n  async function getHost() {\n    try {\n      let response = await api.get('/hospedeiros', {\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n          'Accept': '*/*'\n        }\n      });\n      const result = response.data;\n      setDataHost(result.reverse());\n    } catch (error) {\n      console.log('erro na listagem:', error);\n    }\n  }\n\n  useEffect(() => {\n    function interationIdMorph() {\n      setIdMorph(dataMorphological.filter(i => {\n        return i.descricao === morphological;\n      }));\n    }\n\n    interationIdMorph();\n  }, [morphological]);\n  useEffect(() => {\n    function interationIdHost() {\n      setIdHost(dataHost.filter(i => {\n        return i.descricao === host;\n      }));\n    }\n\n    interationIdHost();\n  }, [host]);\n  useEffect(() => {\n    getMorphological();\n  }, []);\n  useEffect(() => {\n    getHost();\n  }, []);\n  useEffect(() => {\n    // async function getImages(){\n    console.log(props.location.urlImagem); //     if(props.location.urlImagem === undefined){\n    //         return;\n    //     }\n    //     try{\n    //         let image;\n    //         let response = await api.get(`/files/image?urlImage=${props.location.urlImagem}`, {\n    //             headers:{\n    //                 'Content-type': 'application/json',\n    //                 'Authorization': `Bearer ${token}`,\n    //                 'Accept': '*/*'\n    //             }\n    //         });\n    //         const result = response.data;\n    //         image = Buffer.from(result, 'binary').toString('base64');\n    //         const formatImage = image ? ('data:image/;base64, ' + image) : undefined;\n    //         console.log(imageUrl);\n    //     }\n    //     catch(error){\n    //         alert('Ocorreu um erro na exibição de imagens');\n    //         console.log(error);\n    //     }\n    // }\n    // setImageUrl(encodeURI(props.location.urlImagem));\n    // getImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerAddBacteryAll\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: title,\n      visible: visible,\n      offSearch: offSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => history.push(\"/colecao-bacteriana\"),\n      className: \"areaBackBactery\",\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {\n        className: \"backBactery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"areaFormAll\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"areaFormBactery1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBacteryImage\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Adicionar fotos:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(FiUpload, {\n                color: \"#FFF\",\n                size: 25\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleFileImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 91\n            }, this), imageUrl === null ? /*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {\n              width: \"50\",\n              height: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              width: \"70\",\n              alt: \"Perspectiva\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(FiUpload, {\n                color: \"#FFF\",\n                size: 25\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleFileImageVerso\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 96\n            }, this), imageVersoUrl === null ? /*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {\n              width: \"50\",\n              height: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageVersoUrl,\n              width: \"70\",\n              alt: \"Verso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(FiUpload, {\n                color: \"#FFF\",\n                size: 25\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleFileImageMicro\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 96\n            }, this), imageMicroUrl === null ? /*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {\n              width: \"50\",\n              height: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageMicroUrl,\n              width: \"70\",\n              alt: \"Microorganismo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"C\\xF3digo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Digite um c\\xF3digo\",\n            name: \"code\",\n            id: \"input\",\n            value: code || props.location.codigo,\n            onChange: e => setCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Descri\\xE7\\xE3o do isolado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: description || props.location.descricaoIsolado,\n            name: \"description\",\n            id: \"input\",\n            onChange: e => setDescription(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ambiente\",\n              children: \"ambiente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"plantas\",\n              children: \"plantas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Local de coleta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Digite Cidade e Bairro\",\n            name: \"collectionPlace\",\n            id: \"input\",\n            value: collectionPlace || props.location.localColeta,\n            onChange: e => setCollectionPlace(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Borda:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: border || props.location.borda,\n            name: \"border\",\n            id: \"input\",\n            onChange: e => setBorder(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inteira\",\n              children: \"inteira\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ondulada\",\n              children: \"ondulada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lobada\",\n              children: \"lobada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"denteada\",\n              children: \"denteada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"filamentos\",\n              children: \"filamentos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"areaFormBactery2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Tipo de crescimento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: typeGrowth || props.location.tipoCresc,\n            name: \"typeGrowth\",\n            id: \"input\",\n            onChange: e => setTypeGrowth(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"limitado\",\n              children: \"limitado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"invasivo\",\n              children: \"invasivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: color || props.location.cor,\n            name: \"color\",\n            id: \"input\",\n            onChange: e => setColor(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"verde\",\n              children: \"verde\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"branco\",\n              children: \"branco\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"branco/amarelo\",\n              children: \"branco/amarelo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"branco/marrom\",\n              children: \"branco/marrom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"branco/cinza\",\n              children: \"branco/cinza\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"branco/rosa\",\n              children: \"branco/rosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"amarelo\",\n              children: \"amarelo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"laranja\",\n              children: \"laranja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rosa\",\n              children: \"rosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lilas/roxo\",\n              children: \"lilas/roxo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bege\",\n              children: \"bege\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"marrom\",\n              children: \"marrom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"preto\",\n              children: \"preto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cinza\",\n              children: \"cinza\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Consist\\xEAncia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: consistence || props.location.consistence,\n            name: \"color\",\n            id: \"input\",\n            onChange: e => setConsistence(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"seca\",\n              children: \"seca\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"aquosa\",\n              children: \"aquosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cremosa\",\n              children: \"cremosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"elastica\",\n              children: \"el\\xE1stica\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"manteiga\",\n              children: \"manteiga\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Detalhes \\xD3pticos:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: detOpticos || props.location.detOpticos,\n            name: \"color\",\n            id: \"input\",\n            onChange: e => setDetOpticos(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"transparente\",\n              children: \"transparente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"translucido\",\n              children: \"translucido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"opaco\",\n              children: \"opaco\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Forma:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: form || props.location.forma,\n            name: \"form\",\n            id: \"input\",\n            onChange: e => setForm(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"circular\",\n              children: \"circular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"irregular\",\n              children: \"irregular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"puntiforme\",\n              children: \"puntiforme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"filamentoso\",\n              children: \"filamentoso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Eleva\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: elevation || props.location.elevacao,\n            name: \"elevation\",\n            id: \"input\",\n            onChange: e => setElevation(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"plana\",\n              children: \"plana\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"venticular\",\n              children: \"venticular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"convexa\",\n              children: \"convexa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pulvinada\",\n              children: \"pulvinada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"umbonada\",\n              children: \"umbonada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"umbilicada\",\n              children: \"umbilicada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallDateArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Data de Coleta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"dateCollect\",\n            id: \"input\",\n            value: dateCollect || props.location.dataColeta,\n            onChange: e => setDateCollect(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Data de Reativa\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"dateReactvation\",\n            id: \"input\",\n            value: dateReactvation || props.location.dataReativacao,\n            onChange: e => setDateReactvation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Esporula:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: spore || props.location.esporula,\n            name: \"spore\",\n            id: \"input\",\n            onChange: e => setSpore(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: true,\n              children: \"sim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: false,\n              children: \"n\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Superf\\xEDcie:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: surface || props.location.superficie,\n            name: \"surface\",\n            id: \"input\",\n            onChange: e => setSurface(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lisa\",\n              children: \"lisa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rugosa\",\n              children: \"rugosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cerebriforme\",\n              children: \"cerebriforme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"coriacea\",\n              children: \"coriacea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"algodonosa\",\n              children: \"algodonosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cotonosa\",\n              children: \"cotonosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mucoide\",\n              children: \"mucoide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cremosa\",\n              children: \"cremosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"concentrica\",\n              children: \"concentrica\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"opaca\",\n              children: \"opaca\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"aveludada\",\n              children: \"aveludada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"brilhante\",\n              children: \"brilhante\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pulverulenta\",\n              children: \"pulverulenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sulcos\",\n              children: \"sulcos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"protuber\\xE2ncia\",\n              children: \"protuber\\xE2ncia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"areaFormBactery3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaAdd\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Identifica\\xE7\\xE3o Morfol\\xF3gica:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsMorphological\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: morphological || props.location.morfologia,\n              name: \"morphological\",\n              id: \"input\",\n              onChange: e => setMorphological(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecionar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 33\n              }, this), dataMorphological.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i.descricao,\n                children: i.descricao\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n              onClick: addMorphological,\n              id: \"iconAdd\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 29\n            }, this), openAddMorph && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addMorph\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Cadastre uma identifica\\xE7\\xE3o Morfol\\xF3gica\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: addMorph,\n                type: \"text\",\n                id: \"addMorph\",\n                onChange: e => setAddMoph(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttonsAddMorph\",\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 5,\n                  direction: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: addMorphRequest,\n                    size: \"small\",\n                    variant: \"contained\",\n                    children: \"CADASTRAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 5,\n                  direction: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => setOpenAddMorph(false),\n                    size: \"small\",\n                    variant: \"contained\",\n                    children: \"CANCELAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaAdd\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Origem do Hospedeiro:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"optionsMorphological\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: host || props.location.hospedeiro,\n              name: \"host\",\n              id: \"input\",\n              onChange: e => setHost(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 33\n              }, this), dataHost.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: i.descricao,\n                children: i.descricao\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n              onClick: addHost,\n              id: \"iconAdd\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 29\n            }, this), openHost && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addMorph\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Cadastre uma origem do Hospedeiro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: addNewHost,\n                type: \"text\",\n                id: \"addMorph\",\n                onChange: e => setAddNewHost(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttonsAddMorph\",\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 5,\n                  direction: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: addHostRequest,\n                    size: \"small\",\n                    variant: \"contained\",\n                    children: \"CADASTRAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  spacing: 5,\n                  direction: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => setOpenHost(false),\n                    size: \"small\",\n                    variant: \"contained\",\n                    children: \"CANCELAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Propriedades:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: properties || props.location.propriedades,\n            name: \"properties\",\n            id: \"input\",\n            onChange: e => setProperties(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gramais\",\n              children: \"gramais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gramenos\",\n              children: \"gramenos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"amilases\",\n              children: \"amilases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lipases\",\n              children: \"lipases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"proteases\",\n              children: \"proteases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"biosurfactantes\",\n              children: \"biosurfactantes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"biorremediacao\",\n              children: \"biorremedia\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"controle\",\n              children: \"controle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inoculantes\",\n              children: \"inoculantes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Identifica\\xE7\\xE3o Molecular:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Digite uma identifica\\xE7\\xE3o\",\n            name: \"molecularIdentification\",\n            id: \"input\",\n            value: molecularIdentification || props.location.identMolecular,\n            onChange: e => setMolecularIdentification(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Meio de Isolamento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: isolationMedium || props.location.meioIsolamento,\n            name: \"isolationMedium\",\n            id: \"input\",\n            onChange: e => setIsolationMedium(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bda\",\n              children: \"bda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"tsb\",\n              children: \"tsb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sabouraud\",\n              children: \"sabouraud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallNumberArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dias de Incuba\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"areaDays\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Tempo\",\n              min: 1,\n              name: \"startIncubation\",\n              id: \"inputDays\",\n              value: startIncubation || props.location.tempIncubacao,\n              onChange: e => setStartIncubation(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smallAreaBactery\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pigmento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: pigment || props.location.pigmento,\n            name: \"pigment\",\n            id: \"input\",\n            onChange: e => setPigment(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"amarelo\",\n              children: \"amarelo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"vermelho\",\n              children: \"vermelho\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"laranja\",\n              children: \"laranja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lilas\",\n              children: \"lilas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"verde\",\n              children: \"verde\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"azul\",\n              children: \"azul\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 30\n          },\n          children: props.location.buttonUpdate ? /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            direction: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: editBactery,\n              size: \"large\",\n              variant: \"contained\",\n              children: \"ATUALIZAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            direction: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addBactery,\n              size: \"large\",\n              variant: \"contained\",\n              children: \"CADASTRAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VersionApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBactery, \"l+eIR0NZDNhuLxeMRzuejWJcc0o=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddBactery;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBactery\");","map":{"version":3,"sources":["/home/max/Documentos/microsys/src/pages/AddBactery/index.js"],"names":["React","useEffect","useState","useContext","useHistory","ArrowBackIosIcon","Header","AddCircleIcon","Stack","Button","api","AuthContext","FiUpload","AddPhotoAlternateIcon","VersionApp","AddBactery","props","history","token","title","setTitle","visible","setVisible","offSearch","setOffSearch","dataMorphological","setDataMorphological","dataHost","setDataHost","filePhoto","setFilePhoto","filePhotoVerso","setFilePhotoVerso","filePhotoMicro","setFilePhotoMicro","imageUrl","setImageUrl","imageVersoUrl","setImageVersoUrl","imageMicroUrl","setImageMicroUrl","description","setDescription","collectionPlace","setCollectionPlace","border","setBorder","surface","setSurface","properties","setProperties","molecularIdentification","setMolecularIdentification","typeGrowth","setTypeGrowth","color","setColor","consistence","setConsistence","detOpticos","setDetOpticos","form","setForm","elevation","setElevation","dateCollect","setDateCollect","dateReactvation","setDateReactvation","spore","setSpore","morphological","setMorphological","host","setHost","isolationMedium","setIsolationMedium","startIncubation","setStartIncubation","Number","code","setCode","pigment","setPigment","addMorph","setAddMoph","addNewHost","setAddNewHost","openAddMorph","setOpenAddMorph","openHost","setOpenHost","idMorph","setIdMorph","idHost","setIdHost","idBactery","setIdBactery","passValidation","setPassValidation","addMorphological","addHost","addMorphRequest","alert","post","descricao","getMorphological","error","console","log","addHostRequest","getHost","validationFormBactery","body","arrayBody","Object","entries","propEmpty","filter","e","length","arrayPropEmpty","map","item","formatedString","join","toString","addBactery","undefined","codigo","identMolecular","cor","pigmento","consistencia","forma","borda","superficie","elevacao","esporula","tipoCresc","propriedades","meioIsolamento","tempIncubacao","descricaoIsolado","dataColeta","dataReativacao","localColeta","morfologiaId","id","hospedeiroId","defaults","headers","common","Authorization","response","result","data","uploadImages","push","handleFileImage","target","files","image","type","URL","createObjectURL","handleFileImageVerso","handleFileImageMicro","handleUpload","currentUid","FormData","append","patch","editBactery","location","itemId","get","reverse","interationIdMorph","i","interationIdHost","urlImagem","value","morfologia","hospedeiro","marginTop","buttonUpdate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport './addBactery.css';\nimport { useHistory } from 'react-router-dom';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport Header from '../../components/Header';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport api from '../../services/api';\nimport { AuthContext } from '../../contexts/auth';\nimport { FiUpload } from 'react-icons/fi';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport VersionApp from '../../components/VersionApp';\n\n\n\nexport default function AddBactery(props){\n    let history = useHistory();\n    const { token } = useContext(AuthContext);\n    const [title, setTitle] = useState('CADASTRAR COLÔNIA BACTERIANA');\n    const [visible, setVisible] = useState(false);\n    const [offSearch, setOffSearch] = useState(false);\n    const [dataMorphological, setDataMorphological] = useState([]);\n    const [dataHost, setDataHost] = useState([]);\n    const [filePhoto, setFilePhoto] = useState();\n    const [filePhotoVerso, setFilePhotoVerso] = useState();\n    const [filePhotoMicro, setFilePhotoMicro] = useState();\n    const [imageUrl, setImageUrl] = useState(null);\n    const [imageVersoUrl, setImageVersoUrl] = useState(null);\n    const [imageMicroUrl, setImageMicroUrl] = useState(null);\n    const [description, setDescription] = useState('');\n    const [collectionPlace, setCollectionPlace] = useState('');\n    const [border, setBorder] = useState('');\n    const [surface, setSurface] = useState('');\n    const [properties, setProperties] = useState('');\n    const [molecularIdentification, setMolecularIdentification] = useState('');\n    const [typeGrowth, setTypeGrowth] = useState('');\n    const [color, setColor] = useState('');\n    const [consistence, setConsistence] = useState('');\n    const [detOpticos, setDetOpticos] = useState('');\n    const [form, setForm] = useState('');\n    const [elevation, setElevation] = useState('');\n    const [dateCollect, setDateCollect] = useState('');\n    const [dateReactvation, setDateReactvation] = useState('');\n    const [spore, setSpore] = useState();\n    const [morphological, setMorphological] = useState('');\n    const [host, setHost] = useState('');\n    const [isolationMedium, setIsolationMedium] = useState('');\n    const [startIncubation, setStartIncubation] = useState(Number);\n    const [code, setCode] = useState('');\n    const [pigment, setPigment] = useState('');\n    const [addMorph, setAddMoph] = useState('');\n    const [addNewHost, setAddNewHost] = useState('');\n    const [openAddMorph, setOpenAddMorph] = useState(false);\n    const [openHost, setOpenHost] = useState(false);\n    const [idMorph, setIdMorph] = useState();\n    const [idHost, setIdHost] = useState();\n    const [idBactery, setIdBactery] = useState('');\n    const [passValidation, setPassValidation] = useState(false);\n\n    function addMorphological(){\n        setOpenAddMorph(true);\n    }\n\n    function addHost(){\n        setOpenHost(true);\n    }\n\n    async function addMorphRequest(){\n        if(addMorph === ''){\n            alert('Preencha o campo de identificação Morfológica');\n            return\n        }\n\n        try{\n            await api.post('/morfologias',{\n                descricao: addMorph\n            })\n            \n            alert('Cadastro realizado com sucesso!');\n            setOpenAddMorph(false);\n            getMorphological();\n            setAddMoph('');\n        }\n        catch(error){\n            console.log(error);\n            alert('Essa identificação morfológica já exite!');\n        }       \n\n    }\n\n    async function addHostRequest(){\n        if(addNewHost === ''){\n            alert('Preencha o campo de origem do hospedeiro');\n            return\n        }\n\n        try{\n            await api.post('/hospedeiros',{\n                descricao: addNewHost\n            })\n            \n            alert('Cadastro realizado com sucesso!');\n            setOpenHost(false);\n            getHost();\n            setAddNewHost('');\n        }\n        catch(error){\n            console.log(error);\n            alert('Essa identificação morfológica já exite!');\n        } \n    }\n\n    function validationFormBactery(body){\n        const arrayBody = Object.entries(body);\n        const propEmpty = arrayBody.filter(e => {\n            return e[1] === '';\n        })\n\n        if(propEmpty.length > 0){\n            const arrayPropEmpty = propEmpty.map(item => {\n                return item[0];\n            })\n\n            const formatedString = arrayPropEmpty.join(', ').toString();\n            console.log(formatedString)\n            alert(`Preencha os seguintes campos ${formatedString}`);\n            setPassValidation(true);\n        }\n        \n    }\n\n    async function addBactery(){\n        setPassValidation(false);\n        \n        if(imageUrl === undefined || imageVersoUrl === undefined || imageMicroUrl === undefined){\n            return alert('Adicione todas as imagens para continuar o registro deste fungo.');\n        }\n\n        if(morphological === '' || host === ''){\n            return alert('Escolha uma identificação Morfológica e uma Origem para o hospedeiro.');\n        }\n\n        const body = {\n            codigo: code,\n            identMolecular: molecularIdentification,\n            cor: color,\n            pigmento: pigment,\n            consistencia: consistence,\n            detOpticos: detOpticos,\n            forma: form,\n            borda: border,\n            superficie: surface, \n            elevacao: elevation,\n            esporula: spore,\n            tipoCresc: typeGrowth,\n            propriedades: properties,\n            meioIsolamento: isolationMedium,\n            tempIncubacao: startIncubation,\n            descricaoIsolado: description,\n            dataColeta: dateCollect,\n            dataReativacao: dateReactvation,\n            localColeta: collectionPlace,\n            morfologiaId: idMorph[0].id,\n            hospedeiroId: idHost[0].id\n        }\n\n        if(!passValidation){\n            validationFormBactery(body);\n        }else {\n            return\n        }\n        \n        try{\n\n            api.defaults.headers.common.Authorization = 'Bearer ' + token;\n            let response = await api.post('/bacterias', body);\n\n            const result = response.data;\n            const id = result.id;\n            setDescription('');\n            setCollectionPlace('');\n            setBorder('');\n            setSurface('');\n            setProperties('');\n            setMolecularIdentification('');\n            setTypeGrowth('');\n            setColor('');\n            setForm('');\n            setElevation('');\n            setDateCollect('');\n            setConsistence('');\n            setDetOpticos('');\n            setDateReactvation('');\n            setSpore(false);\n            setMorphological('');\n            setHost('');\n            setIsolationMedium('')\n            setStartIncubation(0);\n            setCode('');\n            setPigment('');\n\n            uploadImages(id);\n            getMorphological();\n            alert('Cadastro realizado com sucesso!');\n            history.push('/colecao-bacteriana');\n        }\n        catch(error){\n            console.log(error);\n            return\n        }\n    }\n\n    function handleFileImage(e){\n        if(e.target.files[0]){\n            const image = e.target.files[0];\n\n            if(image.type === 'image/jpeg' || image.type === 'image/png'){\n                setFilePhoto(image);\n                setImageUrl(URL.createObjectURL(e.target.files[0]));\n            }else {\n                alert('Envie uma imagem do tipo PNG ou JPEG');\n                setFilePhoto(null);\n                return null;\n            }\n        }\n    }\n\n    function handleFileImageVerso(e){\n        if(e.target.files[0]){\n            const image = e.target.files[0];\n\n            if(image.type === 'image/jpeg' || image.type === 'image/png'){\n                setFilePhotoVerso(image);\n                setImageVersoUrl(URL.createObjectURL(e.target.files[0]));\n            }else {\n                alert('Envie uma imagem do tipo PNG ou JPEG');\n                setFilePhotoVerso(null);\n                return null;\n            }\n        }\n    }\n\n    function handleFileImageMicro(e){\n        if(e.target.files[0]){\n            const image = e.target.files[0];\n\n            if(image.type === 'image/jpeg' || image.type === 'image/png'){\n                setFilePhotoMicro(image);\n                setImageMicroUrl(URL.createObjectURL(e.target.files[0]));\n            }else {\n                alert('Envie uma imagem do tipo PNG ou JPEG');\n                setFilePhotoMicro(null);\n                return null;\n            }\n        }\n    }\n    //continuar criando upload api\n    async function handleUpload(idBactery){\n        const currentUid = idBactery; \n\n        const body = new FormData();\n        body.append('urlImagem', filePhoto);\n        body.append('urlImagemVerso', filePhotoVerso);\n        body.append('urlImagemMicro', filePhotoMicro);\n    \n        try{\n            api.defaults.headers.Authorization = `Bearer ${token}`;\n            await api.patch(`/bacterias/${currentUid}/images`, body);\n        }\n        catch (error){\n            console.log(error);\n        }\n    }\n\n    async function uploadImages(idBactery){\n        if((filePhoto && filePhotoVerso && filePhotoMicro) !== null){\n            handleUpload(idBactery);\n        }\n        return\n    }\n\n    async function editBactery(){\n        let body = {\n            codigo: code || props.location.codigo,\n            identMolecular: molecularIdentification || props.location.identMolecular,\n            cor: color || props.location.cor,\n            consistence: consistence || props.location.consistence,\n            detOpticos: detOpticos || props.location.detOpticos,\n            pigmento: pigment || props.location.pigmento,\n            forma: form || props.location.forma,\n            borda: border || props.location.borda,\n            superficie: surface || props.location.superficie, \n            elevacao: elevation || props.location.elevacao,\n            esporula: spore || props.location.esporula,\n            tipoCresc: typeGrowth || props.location.tipoCresc,\n            propriedades: properties || props.location.propriedades,\n            meioIsolamento: isolationMedium || props.location.meioIsolamento,\n            tempIncubacao: startIncubation || props.location.tempIncubacao,\n            descricaoIsolado: description || props.location.descricaoIsolado,\n            dataColeta: dateCollect || props.location.dataColeta,\n            dataReativacao: dateReactvation || props.location.dataReativacao,\n            localColeta: collectionPlace || props.location.localColeta,\n            morfologiaId: props.location.morfologiaId,\n            hospedeiroId: props.location.hospedeiroId\n        }\n\n        try{\n            api.defaults.headers.common.Authorization = 'Bearer ' + token;\n            await api.patch(`/bacterias/${props.location.itemId}`, body);\n            \n            setFilePhoto('');\n            setDescription('');\n            setCollectionPlace('');\n            setBorder('');\n            setSurface('');\n            setProperties('');\n            setMolecularIdentification('');\n            setTypeGrowth('');\n            setColor('');\n            setConsistence('');\n            setDetOpticos('');\n            setForm('');\n            setElevation('');\n            setDateCollect('');\n            setDateReactvation('');\n            setSpore(false);\n            setMorphological('');\n            setHost('');\n            setIsolationMedium('')\n            setStartIncubation(0);\n            setCode('');\n            setPigment('');\n\n            handleUpload(props.location.itemId);\n            getMorphological();\n            alert('Registro atualizado com sucesso!');\n            history.push('/colecao-bacteriana');\n        }\n        catch(error){\n            console.log(error);\n            alert('preencha todos os campos');\n            return\n        }\n    }\n    \n    async function getMorphological(){\n        try{\n            let response = await api.get('/morfologias',{\n                headers:{\n                  'Content-type': 'application/json',\n                  'Authorization': `Bearer ${token}`,\n                  'Accept': '*/*'\n                }\n              })\n            const result = response.data;\n            setDataMorphological(result.reverse());\n        }\n        catch(error){\n            console.log('erro na listagem:', error);\n        }\n    }\n\n    async function getHost(){\n        try{\n            let response = await api.get('/hospedeiros',{\n                headers:{\n                  'Content-type': 'application/json',\n                  'Authorization': `Bearer ${token}`,\n                  'Accept': '*/*'\n                }\n              })\n            const result = response.data;\n            setDataHost(result.reverse());\n        }\n        catch(error){\n            console.log('erro na listagem:', error);\n        }\n    }\n\n    useEffect(()=> {\n        function interationIdMorph(){\n            setIdMorph(dataMorphological.filter(i => {\n                return i.descricao === morphological;\n            }));\n        }\n        interationIdMorph();\n    }, [morphological]);\n\n    useEffect(()=> {\n        function interationIdHost(){\n            setIdHost(dataHost.filter(i => {\n                return i.descricao === host;\n            }));\n        }\n        interationIdHost();\n    }, [host]);\n\n    useEffect(()=> {\n        getMorphological();\n    }, []);\n\n    useEffect(()=> {\n        getHost();\n    }, []);\n\n    useEffect(()=> {\n\n        // async function getImages(){\n            console.log(props.location.urlImagem);\n        //     if(props.location.urlImagem === undefined){\n        //         return;\n        //     }\n        //     try{\n        //         let image;\n        //         let response = await api.get(`/files/image?urlImage=${props.location.urlImagem}`, {\n        //             headers:{\n        //                 'Content-type': 'application/json',\n        //                 'Authorization': `Bearer ${token}`,\n        //                 'Accept': '*/*'\n        //             }\n        //         });\n        //         const result = response.data;\n        //         image = Buffer.from(result, 'binary').toString('base64');\n        //         const formatImage = image ? ('data:image/;base64, ' + image) : undefined;\n                \n        //         console.log(imageUrl);\n        //     }\n        //     catch(error){\n        //         alert('Ocorreu um erro na exibição de imagens');\n        //         console.log(error);\n        //     }\n        // }\n        // setImageUrl(encodeURI(props.location.urlImagem));\n        // getImages();\n    }, [])\n\n    return (\n        <div className='containerAddBacteryAll'>\n            <Header title={title} visible={visible} offSearch={offSearch}/>\n            <div onClick={()=> history.push(\"/colecao-bacteriana\")} className='areaBackBactery'>\n                <ArrowBackIosIcon className='backBactery'/>\n            </div>\n            <div className='areaFormAll'>\n                <div className='areaFormBactery1'>\n                <div className='smallAreaBacteryImage'>\n                    <span>Adicionar fotos:</span>\n                    <label className=\"label-avatar\">\n                        <span>\n                            <FiUpload color=\"#FFF\" size={25} />\n                        </span>\n\n                        <input type=\"file\" accept=\"image/*\" onChange={handleFileImage}  /><br/>\n                        { imageUrl === null ? \n                            <AddPhotoAlternateIcon width=\"50\" height=\"50\"/>\n                            :\n                            <img src={imageUrl} width=\"70\" alt=\"Perspectiva\" />\n                        }\n                    </label>\n                    <label className=\"label-avatar\">\n                        <span>\n                            <FiUpload color=\"#FFF\" size={25} />\n                        </span>\n\n                        <input type=\"file\" accept=\"image/*\" onChange={handleFileImageVerso}  /><br/>\n                        { imageVersoUrl === null ? \n                            <AddPhotoAlternateIcon width=\"50\" height=\"50\"/>\n                            :\n                            <img src={imageVersoUrl} width=\"70\" alt=\"Verso\" />\n                        }\n                    </label>\n                    <label className=\"label-avatar\">\n                        <span>\n                            <FiUpload color=\"#FFF\" size={25} />\n                        </span>\n\n                        <input type=\"file\" accept=\"image/*\" onChange={handleFileImageMicro}  /><br/>\n                        { imageMicroUrl === null ? \n                            <AddPhotoAlternateIcon width=\"50\" height=\"50\"/>\n                            :\n                            <img src={imageMicroUrl} width=\"70\" alt=\"Microorganismo\" />\n                        }\n                    </label>\n                </div>\n                    <div className='smallAreaBactery'>\n                        <span>Código:</span>\n                        <input type=\"text\" placeholder='Digite um código' name=\"code\" id=\"input\" value={code || props.location.codigo} onChange={e=> setCode(e.target.value)}/>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Descrição do isolado:</span>\n                        <select value={description || props.location.descricaoIsolado} name=\"description\" id=\"input\" onChange={e=> setDescription(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='ambiente'>ambiente</option>\n                            <option value='plantas'>plantas</option>\n                        </select>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Local de coleta:</span>\n                            <input type=\"text\" placeholder='Digite Cidade e Bairro' name=\"collectionPlace\" id=\"input\" value={collectionPlace || props.location.localColeta} onChange={e=> setCollectionPlace(e.target.value)}/>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Borda:</span>\n                        <select value={border || props.location.borda} name=\"border\" id=\"input\" onChange={e=> setBorder(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='inteira'>inteira</option>\n                            <option value='ondulada'>ondulada</option>\n                            <option value='lobada'>lobada</option>\n                            <option value='denteada'>denteada</option>\n                            <option value='filamentos'>filamentos</option>\n                        </select>\n                    </div>\n                </div>\n                <div className='areaFormBactery2'>\n                    <div className='smallAreaBactery'>\n                        <span>Tipo de crescimento:</span>\n                        <select value={typeGrowth || props.location.tipoCresc} name=\"typeGrowth\" id=\"input\" onChange={e=> setTypeGrowth(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='limitado'>limitado</option>\n                            <option value='invasivo'>invasivo</option>\n                        </select>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Cor:</span>\n                        <select value={color || props.location.cor} name=\"color\" id=\"input\" onChange={e=> setColor(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='verde'>verde</option>\n                            <option value='branco'>branco</option>\n                            <option value='branco/amarelo'>branco/amarelo</option>\n                            <option value='branco/marrom'>branco/marrom</option>\n                            <option value='branco/cinza'>branco/cinza</option>\n                            <option value='branco/rosa'>branco/rosa</option>\n                            <option value='amarelo'>amarelo</option>\n                            <option value='laranja'>laranja</option>\n                            <option value='rosa'>rosa</option>\n                            <option value='lilas/roxo'>lilas/roxo</option>\n                            <option value='bege'>bege</option>\n                            <option value='marrom'>marrom</option>\n                            <option value='preto'>preto</option>\n                            <option value='cinza'>cinza</option>\n                        </select>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Consistência:</span>\n                        <select value={consistence || props.location.consistence} name=\"color\" id=\"input\" onChange={e=> setConsistence(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='seca'>seca</option>\n                            <option value='aquosa'>aquosa</option>\n                            <option value='cremosa'>cremosa</option>\n                            <option value='elastica'>elástica</option>\n                            <option value='manteiga'>manteiga</option>\n                        </select>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Detalhes Ópticos:</span>\n                        <select value={detOpticos || props.location.detOpticos} name=\"color\" id=\"input\" onChange={e=> setDetOpticos(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='transparente'>transparente</option>\n                            <option value='translucido'>translucido</option>\n                            <option value='opaco'>opaco</option>\n                        </select>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Forma:</span>\n                        <select value={form || props.location.forma} name=\"form\" id=\"input\" onChange={e=> setForm(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='circular'>circular</option>\n                            <option value='irregular'>irregular</option>\n                            <option value='puntiforme'>puntiforme</option>\n                            <option value='filamentoso'>filamentoso</option>\n                        </select>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Elevação:</span>\n                        <select value={elevation || props.location.elevacao} name=\"elevation\" id=\"input\" onChange={e=> setElevation(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='plana'>plana</option>\n                            <option value='venticular'>venticular</option>\n                            <option value='convexa'>convexa</option>\n                            <option value='pulvinada'>pulvinada</option>\n                            <option value='umbonada'>umbonada</option>\n                            <option value='umbilicada'>umbilicada</option>\n                        </select>\n                    </div>\n                    <div className='smallDateArea'>\n                        <span>Data de Coleta:</span>\n                        <input type=\"date\" name=\"dateCollect\" id=\"input\" value={dateCollect || props.location.dataColeta} onChange={e=> setDateCollect(e.target.value)}/>\n                        <span>Data de Reativação:</span>\n                        <input type=\"date\" name=\"dateReactvation\" id=\"input\" value={dateReactvation || props.location.dataReativacao} onChange={e=> setDateReactvation(e.target.value)}/>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Esporula:</span>\n                        <select value={spore || props.location.esporula} name=\"spore\" id=\"input\" onChange={e=> setSpore(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value={true}>sim</option>\n                            <option value={false}>não</option>\n                        </select>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Superfície:</span>\n                        <select value={surface || props.location.superficie} name=\"surface\" id=\"input\" onChange={e=> setSurface(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='lisa'>lisa</option>\n                            <option value='rugosa'>rugosa</option>\n                            <option value='cerebriforme'>cerebriforme</option>\n                            <option value='coriacea'>coriacea</option>\n                            <option value='algodonosa'>algodonosa</option>\n                            <option value='cotonosa'>cotonosa</option>\n                            <option value='mucoide'>mucoide</option>\n                            <option value='cremosa'>cremosa</option>\n                            <option value='concentrica'>concentrica</option>\n                            <option value='opaca'>opaca</option>\n                            <option value='aveludada'>aveludada</option>\n                            <option value='brilhante'>brilhante</option>\n                            <option value='pulverulenta'>pulverulenta</option>\n                            <option value='sulcos'>sulcos</option>\n                            <option value='protuberância'>protuberância</option>\n                        </select>\n                    </div>\n                </div>\n                <div className='areaFormBactery3'>\n                    <div className='smallAreaAdd'>\n                        <span>Identificação Morfológica:</span>\n                        <div className='optionsMorphological'>\n                            <select value={morphological || props.location.morfologia} name=\"morphological\" id=\"input\" onChange={e=> setMorphological(e.target.value)}>\n                                <option value=\"\">Selecionar</option>\n                                {dataMorphological.map(i => (\n                                    <option value={i.descricao}>{i.descricao}</option>\n                                ))\n                                }\n                            </select>\n                            <AddCircleIcon onClick={addMorphological} id='iconAdd' color='primary' />\n                            {openAddMorph &&\n                                <div className='addMorph'>\n                                    <span>Cadastre uma identificação Morfológica</span>\n                                    <input value={addMorph} type='text' id='addMorph' onChange={e=> setAddMoph(e.target.value)} />\n                                    <div className='buttonsAddMorph'>\n                                        <Stack spacing={5} direction=\"row\">\n                                            <Button onClick={addMorphRequest} size='small' variant=\"contained\">CADASTRAR</Button>\n                                        </Stack>\n                                        <Stack spacing={5} direction=\"row\">\n                                            <Button onClick={()=> setOpenAddMorph(false)} size='small' variant=\"contained\">CANCELAR</Button>\n                                        </Stack>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div className='smallAreaAdd'>\n                        <span>Origem do Hospedeiro:</span>\n                        <div className='optionsMorphological'>\n                            <select value={host || props.location.hospedeiro} name=\"host\" id=\"input\" onChange={e=> setHost(e.target.value)}>\n                                <option value=\"\">Selecione</option>\n                                {dataHost.map(i => (\n                                    <option value={i.descricao}>{i.descricao}</option>\n                                ))\n                                }\n                            </select>\n                            <AddCircleIcon onClick={addHost} id='iconAdd' color='primary' />\n                            {openHost &&\n                                <div className='addMorph'>\n                                    <span>Cadastre uma origem do Hospedeiro</span>\n                                    <input value={addNewHost} type='text' id='addMorph' onChange={e=> setAddNewHost(e.target.value)} />\n                                    <div className='buttonsAddMorph'>\n                                        <Stack spacing={5} direction=\"row\">\n                                            <Button onClick={addHostRequest} size='small' variant=\"contained\">CADASTRAR</Button>\n                                        </Stack>\n                                        <Stack spacing={5} direction=\"row\">\n                                            <Button onClick={()=> setOpenHost(false)} size='small' variant=\"contained\">CANCELAR</Button>\n                                        </Stack>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Propriedades:</span>\n                        <select value={properties || props.location.propriedades} name=\"properties\" id=\"input\" onChange={e=> setProperties(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='gramais'>gramais</option>\n                            <option value='gramenos'>gramenos</option>\n                            <option value='amilases'>amilases</option>\n                            <option value='lipases'>lipases</option>\n                            <option value='proteases'>proteases</option>\n                            <option value='biosurfactantes'>biosurfactantes</option>\n                            <option value='biorremediacao'>biorremediação</option>\n                            <option value='controle'>controle</option>\n                            <option value='inoculantes'>inoculantes</option>\n                        </select>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Identificação Molecular:</span>\n                        <input type=\"text\" placeholder='Digite uma identificação' name=\"molecularIdentification\" id=\"input\" value={molecularIdentification || props.location.identMolecular} onChange={e=> setMolecularIdentification(e.target.value)}/>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Meio de Isolamento:</span>\n                        <select value={isolationMedium || props.location.meioIsolamento} name=\"isolationMedium\" id=\"input\" onChange={e=> setIsolationMedium(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='bda'>bda</option>\n                            <option value='tsb'>tsb</option>\n                            <option value='sabouraud'>sabouraud</option>\n                        </select>\n                    </div>\n                    <div className='smallNumberArea'>\n                        <span>Dias de Incubação:</span>\n                        <div className='areaDays'>\n                            <input type=\"number\" placeholder='Tempo' min={1} name=\"startIncubation\" id=\"inputDays\" value={startIncubation || props.location.tempIncubacao} onChange={e=> setStartIncubation(e.target.value)}/>\n                            <span>Dias</span>\n                        </div>\n                    </div>\n                    <div className='smallAreaBactery'>\n                        <span>Pigmento:</span>\n                        <select value={pigment || props.location.pigmento} name=\"pigment\" id=\"input\" onChange={e=> setPigment(e.target.value)}>\n                            <option value=\"\">Selecione</option>\n                            <option value='amarelo'>amarelo</option>\n                            <option value='vermelho'>vermelho</option>\n                            <option value='laranja'>laranja</option>\n                            <option value='lilas'>lilas</option>\n                            <option value='verde'>verde</option>\n                            <option value='azul'>azul</option>\n                        </select>\n                    </div>\n                    <div style={{marginTop: 30}}>\n                        {props.location.buttonUpdate ?\n                            <Stack spacing={2} direction=\"row\">\n                                <Button onClick={editBactery} size='large' variant=\"contained\">ATUALIZAR</Button>\n                            </Stack>\n                            :\n                            <Stack spacing={2} direction=\"row\">\n                                <Button onClick={addBactery} size='large' variant=\"contained\">CADASTRAR</Button>\n                            </Stack>\n                        }\n                    </div>\n                </div>\n            </div>\n            <VersionApp />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}