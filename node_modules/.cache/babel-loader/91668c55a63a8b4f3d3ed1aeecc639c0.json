{"ast":null,"code":"var _jsxFileName = \"/home/max/Documentos/microsys/src/components/ProgressBar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { AuthContext } from '../../contexts/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProgressBar() {\n  _s();\n\n  const {\n    loading\n  } = useContext(AuthContext);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(oldProgress => {\n        if (oldProgress === 100) {\n          return 0;\n        }\n\n        const diff = Math.random() * 10;\n        return Math.min(oldProgress + diff, 100);\n      });\n    }, 3000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressBar, \"V/Cf+qHQ1OWF+1i/YFbs3Ep7jF4=\");\n\n_c = ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"sources":["/home/max/Documentos/microsys/src/components/ProgressBar/index.js"],"names":["React","useState","useEffect","useContext","Box","LinearProgress","AuthContext","ProgressBar","loading","progress","setProgress","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAcL,UAAU,CAACG,WAAD,CAA9B;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC5BF,MAAAA,WAAW,CAAEG,WAAD,IAAiB;AAC7B,YAAIA,WAAW,KAAK,GAApB,EAAyB;AACrB,iBAAO,CAAP;AACH;;AACD,cAAMC,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,eAAOD,IAAI,CAACE,GAAL,CAASJ,WAAW,GAAGC,IAAvB,EAA6B,GAA7B,CAAP;AACC,OANU,CAAX;AAOH,KARwB,EAQtB,IARsB,CAAzB;AAUA,WAAO,MAAM;AACTI,MAAAA,aAAa,CAACP,KAAD,CAAb;AACH,KAFD;AAGH,GAdQ,EAcN,CAACH,OAAD,CAdM,CAAT;AAgBF,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAACW,MAAAA,KAAK,EAAE;AAAR,KAAT;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1BuBZ,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { AuthContext } from '../../contexts/auth';\n\nexport default function ProgressBar() {\n    const { loading } = useContext(AuthContext);\n\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((oldProgress) => {\n            if (oldProgress === 100) {\n                return 0;\n            }\n            const diff = Math.random() * 10;\n            return Math.min(oldProgress + diff, 100);\n            });\n        }, 3000);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, [loading]);\n\n  return (\n    <Box sx={{width: '100%'}}>\n      <LinearProgress />\n    </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}