{"ast":null,"code":"var _jsxFileName = \"/home/max/Documentos/microsys/src/pages/SignIn/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './signin.css';\nimport logo from '../../assets/logo.png';\nimport { AuthContext } from '../../contexts/auth';\nimport { LinearProgress } from '@mui/material';\nimport VersionApp from '../../components/VersionApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const {\n    auth,\n    loading,\n    setLoading\n  } = useContext(AuthContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  async function signIn() {\n    if (email.length === 0 && password.length === 0) return alert('Preencha os campos!');\n    if (email.length === 0) return alert('Digite seu e-mail!');\n    if (password.length === 0) return alert('Digite sua senha!');\n    setLoading(true);\n    await auth(email, password);\n    setLoading(false);\n    setErrorMessage('Usuário/senha incorretos');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area-login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MICROSYS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Sistema Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"inputSignIn\",\n          placeholder: \"usu\\xE1rio\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"inputSignIn\",\n          placeholder: \"*********\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signIn,\n          className: \"btn-acess\",\n          type: \"submit\",\n          children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this) : 'Entrar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VersionApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SignIn, \"yballPsTV6dQgdis/bGCWcFROyU=\");\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/max/Documentos/microsys/src/pages/SignIn/index.js"],"names":["React","useState","useContext","Link","logo","AuthContext","LinearProgress","VersionApp","SignIn","auth","loading","setLoading","email","setEmail","password","setPassword","errorMessage","setErrorMessage","signIn","length","alert","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './signin.css';\nimport logo from '../../assets/logo.png';\nimport { AuthContext } from '../../contexts/auth';\nimport { LinearProgress } from '@mui/material';\nimport VersionApp from '../../components/VersionApp';\n\nexport default function SignIn() {\n\n  const { auth, loading, setLoading } = useContext(AuthContext);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n\n  async function signIn(){\n\n    if (email.length === 0 && password.length === 0)\n      return alert('Preencha os campos!')\n    if (email.length === 0)\n      return alert('Digite seu e-mail!')\n    if (password.length === 0)\n      return alert('Digite sua senha!')\n    \n    setLoading(true);\n    await auth(email, password);\n    setLoading(false);\n    setErrorMessage('Usuário/senha incorretos');\n\n  }\n\n    return (\n      <div className=\"container\">\n        <div className=\"signin\">\n          <div className=\"area-login\">\n            <h1>MICROSYS</h1>\n            <img src={logo} alt=\"Sistema Logo\" />\n          </div>\n          <div className=\"form\">\n            <input type=\"text\" id='inputSignIn' placeholder=\"usuário\" value={email} onChange={e=> setEmail(e.target.value)}/>\n            <input type=\"password\" id='inputSignIn' placeholder=\"*********\" value={password} onChange={e=> setPassword(e.target.value)}/>\n            <button onClick={signIn} className=\"btn-acess\" type=\"submit\" >\n            {loading ? \n              <LinearProgress />\n             :\n              'Entrar'\n            }\n            </button>\n          </div>\n          {/* <Link to=\"/register\">Esqueceu sua senha ?</Link> */}\n        </div>\n        <VersionApp />\n      </div>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}