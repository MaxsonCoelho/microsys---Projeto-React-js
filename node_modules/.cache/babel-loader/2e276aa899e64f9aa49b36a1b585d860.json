{"ast":null,"code":"var _jsxFileName = \"/home/max/Documentos/microsys/src/components/TableUser/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { AuthContext } from '../../contexts/auth';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StickyHeadTable({\n  setButtonMobileVisible,\n  objInputs,\n  removeUser\n}) {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const {\n    dataListUsers\n  } = useContext(AuthContext);\n  const columns = [{\n    id: 'name',\n    label: 'Name',\n    minWidth: 130\n  }, {\n    id: 'email',\n    label: 'E-mail',\n    minWidth: 130\n  }];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const directionEdit = async item => {\n    setButtonMobileVisible(true);\n    objInputs.name(item.name);\n    objInputs.email(item.email);\n    objInputs.master(item.master);\n    objInputs.active(item.active);\n    objInputs.id(item.id);\n  };\n\n  const directionRemove = async item => {\n    const res = window.confirm('Sabia que além de remover, você pode desativar ou ativar um registro, deseja mesmo remover este usuário ?');\n\n    if (res === true) {\n      await objInputs.id(item.id);\n      removeUser(item);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: dataListUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: [columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"areaActions\",\n                children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                  id: \"icon\",\n                  onClick: () => directionEdit(row)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n                  id: \"icon\",\n                  onClick: () => directionRemove(row)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this)]\n            }, row.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: dataListUsers.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n} // import * as React from 'react';\n// import './table.css';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n// export default function DataTable() {\n//   return (\n//     <div className='container'>\n//       <div className='areaFormulary2'>\n//             <div id='textUser'>\n//                 <span>Lista de microorganismos fúngicos:</span>\n//             </div>\n//             <div className='listHeader'>\n//                 <span id=\"idEmail\">Descrição</span>\n//                 <span id=\"idEmail\">Cor</span>\n//                 <span id=\"idEmail\">Propriedades</span>\n//                 <span id=\"idEmail\">Forma</span>\n//                 <span id=\"idEmail\">Tipo</span>\n//             </div>\n//             <div className='listUser'>\n//                 {\n//                 data.map(m => (\n//                     <div className='containerUser'>\n//                     {loading ?\n//                         <ProgressBar />\n//                         :\n//                         <>\n//                         <div className='listUsers'>\n//                             <span>{m.name}</span>\n//                         </div>\n//                         <div className='listUsers'>\n//                             <span>{m.email}</span>\n//                         </div>\n//                         </>\n//                     }\n//                     <div className='options'>\n//                         <EditIcon id=\"icon\"/>\n//                         <DeleteForeverIcon id=\"icon\"/>\n//                     </div>\n//                     </div>\n//                 ))\n//                 }\n//             </div>\n//         </div>\n//     </div>\n//   );\n// }\n\n_s(StickyHeadTable, \"7MpYT3p5m+3PN2i6efNCvMQYXe0=\");\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["/home/max/Documentos/microsys/src/components/TableUser/index.js"],"names":["React","useContext","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","EditIcon","DeleteForeverIcon","AuthContext","StickyHeadTable","setButtonMobileVisible","objInputs","removeUser","page","setPage","useState","rowsPerPage","setRowsPerPage","dataListUsers","columns","id","label","minWidth","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","directionEdit","item","name","email","master","active","directionRemove","res","window","confirm","width","overflow","maxHeight","map","column","align","slice","row","format","code","length"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { AuthContext } from '../../contexts/auth';\nimport './table.css'\n\n\nexport default function StickyHeadTable({ setButtonMobileVisible, objInputs, removeUser }) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { dataListUsers } = useContext(AuthContext);\n\n  const columns = [\n    { id: 'name', label: 'Name', minWidth: 130 },\n    { id: 'email', label: 'E-mail', minWidth: 130 },\n    \n  ];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const directionEdit = async (item)=> {\n    setButtonMobileVisible(true);\n    objInputs.name(item.name);\n    objInputs.email(item.email);\n    objInputs.master(item.master);\n    objInputs.active(item.active);\n    objInputs.id(item.id);\n  }\n\n  const directionRemove = async (item) => {\n    const res = window.confirm('Sabia que além de remover, você pode desativar ou ativar um registro, deseja mesmo remover este usuário ?');\n      if(res === true){\n        await objInputs.id(item.id);\n        removeUser(item);\n        return\n      }\n  }\n\n  return (\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {dataListUsers\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                      <div className='areaActions'>\n                        <EditIcon id=\"icon\" onClick={()=> directionEdit(row)} />\n                        <DeleteForeverIcon id=\"icon\" onClick={()=> directionRemove(row)} />\n                      </div>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={dataListUsers.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import * as React from 'react';\n// import './table.css';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\n\n// export default function DataTable() {\n//   return (\n//     <div className='container'>\n//       <div className='areaFormulary2'>\n//             <div id='textUser'>\n//                 <span>Lista de microorganismos fúngicos:</span>\n//             </div>\n//             <div className='listHeader'>\n//                 <span id=\"idEmail\">Descrição</span>\n//                 <span id=\"idEmail\">Cor</span>\n//                 <span id=\"idEmail\">Propriedades</span>\n//                 <span id=\"idEmail\">Forma</span>\n//                 <span id=\"idEmail\">Tipo</span>\n//             </div>\n//             <div className='listUser'>\n//                 {\n//                 data.map(m => (\n//                     <div className='containerUser'>\n//                     {loading ?\n//                         <ProgressBar />\n//                         :\n//                         <>\n//                         <div className='listUsers'>\n//                             <span>{m.name}</span>\n//                         </div>\n//                         <div className='listUsers'>\n//                             <span>{m.email}</span>\n//                         </div>\n//                         </>\n//                     }\n//                     <div className='options'>\n//                         <EditIcon id=\"icon\"/>\n//                         <DeleteForeverIcon id=\"icon\"/>\n//                     </div>\n//                     </div>\n//                 ))\n//                 }\n//             </div>\n            \n//         </div>\n//     </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}