{"ast":null,"code":"var _jsxFileName = \"/home/max/Documentos/microsys/src/pages/CollectionBactery/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport './collectionBactery.css';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport TableBactery from '../../components/TableBactery';\nimport Button from '@mui/material/Button';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport api from '../../services/api';\nimport { AuthContext } from '../../contexts/auth';\nimport VersionApp from '../../components/VersionApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CollectionBactery() {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const [title, setTitle] = useState('COLÔNIAS BACTERIANAS');\n  const [visible, setVisible] = useState(true);\n  const [offSearch, setOffSearch] = useState(true);\n  const [dataBactery, setDataBactery] = React.useState([]);\n\n  async function getBactery() {\n    try {\n      const response = await api.get('/bacterias', {\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n          'Accept': '*/*'\n        }\n      });\n      const result = response.data;\n      setDataBactery(result.reverse());\n    } catch (error) {\n      alert('Erro na listagem de coleções bacterianas, verifique sua conexão com a internet.');\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getBactery();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerAll\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: title,\n      visible: visible,\n      offSearch: offSearch,\n      setDataBactery: setDataBactery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !dataBactery && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"N\\xE3o existem cole\\xE7\\xF5es bacterianas cadastradas no momento.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerTableBactery\",\n      children: /*#__PURE__*/_jsxDEV(TableBactery, {\n        dataBactery: dataBactery,\n        getBactery: getBactery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"areaButton\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/adicao-bacteriana\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"btnAdd\",\n          variant: \"contained\",\n          children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CollectionBactery, \"jdyjh5JDl9DNehuodKSVReYUcKg=\");\n\n_c = CollectionBactery;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionBactery\");","map":{"version":3,"sources":["/home/max/Documentos/microsys/src/pages/CollectionBactery/index.js"],"names":["React","useState","useEffect","useContext","Link","Header","TableBactery","Button","AddCircleIcon","api","AuthContext","VersionApp","CollectionBactery","token","title","setTitle","visible","setVisible","offSearch","setOffSearch","dataBactery","setDataBactery","getBactery","response","get","headers","result","data","reverse","error","alert","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,yBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAGA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAYV,UAAU,CAACO,WAAD,CAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,sBAAD,CAAlC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;;AAEA,iBAAeqB,UAAf,GAA2B;AAEzB,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAQ,YAAR,EAAqB;AAC1CC,QAAAA,OAAO,EAAC;AACN,0BAAgB,kBADV;AAEN,2BAAkB,UAASZ,KAAM,EAF3B;AAGN,oBAAU;AAHJ;AADkC,OAArB,CAAvB;AAQA,YAAMa,MAAM,GAAGH,QAAQ,CAACI,IAAxB;AACAN,MAAAA,cAAc,CAACK,MAAM,CAACE,OAAP,EAAD,CAAd;AACD,KAXD,CAYA,OAAMC,KAAN,EAAY;AACVC,MAAAA,KAAK,CAAC,iFAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF;;AAED3B,EAAAA,SAAS,CAAC,MAAK;AACboB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAER,KAAf;AAAsB,MAAA,OAAO,EAAEE,OAA/B;AAAwC,MAAA,SAAS,EAAEE,SAAnD;AAA8D,MAAA,cAAc,EAAEG;AAA9E;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACD,WAAD,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHN,eAKE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,WAAW,EAAEA,WAA3B;AAAwC,QAAA,UAAU,EAAEE;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,oBAAT;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,QAAX;AAAoB,UAAA,OAAO,EAAC,WAA5B;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAjDuBV,iB;;KAAAA,iB","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport './collectionBactery.css';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport TableBactery from '../../components/TableBactery';\nimport Button from '@mui/material/Button';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport api from '../../services/api';\nimport { AuthContext } from '../../contexts/auth';\nimport VersionApp from '../../components/VersionApp';\n\n\nexport default function CollectionBactery() {\n  const { token } = useContext(AuthContext);\n  const [title, setTitle] = useState('COLÔNIAS BACTERIANAS');\n  const [visible, setVisible] = useState(true);\n  const [offSearch, setOffSearch] = useState(true);\n  const [dataBactery, setDataBactery] = React.useState([]);\n\n  async function getBactery(){\n\n    try{\n      const response = await api.get('/bacterias',{\n        headers:{\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n          'Accept': '*/*'\n        }\n      });\n  \n      const result = response.data;\n      setDataBactery(result.reverse());\n    }\n    catch(error){\n      alert('Erro na listagem de coleções bacterianas, verifique sua conexão com a internet.')\n      console.log(error);\n    }\n  }\n\n  useEffect(()=> {\n    getBactery();\n  }, [])\n\n  return (\n    <div className=\"containerAll\">\n      <Header title={title} visible={visible} offSearch={offSearch} setDataBactery={setDataBactery}/>\n      {!dataBactery &&\n          <span>Não existem coleções bacterianas cadastradas no momento.</span> \n      }\n      <div className='containerTableBactery'>\n        <TableBactery dataBactery={dataBactery} getBactery={getBactery}/>\n      </div>\n      <div className='areaButton'>\n        <Link to='/adicao-bacteriana'>\n          <Button id=\"btnAdd\" variant=\"contained\"> \n            <AddCircleIcon />\n          </Button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n "]},"metadata":{},"sourceType":"module"}