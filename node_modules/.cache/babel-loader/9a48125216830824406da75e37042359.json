{"ast":null,"code":"import React from'react';import axios from'axios';var api=axios.create({baseURL:'https://api.labmicrocba.com.br/microsys/test',//BaseUrl server\nheaders:{'Accept':'*/*','Content-Type':'application/json; charset=utf-8'}});api.interceptors.response.use(function(response){// Do something with response data\nreturn response;},function(error){// Do something with response error\n// You can even test for a response code\n// and try a new request before rejecting the promise\nif(error.request._hasError===true&&error.request._response.includes('connect')){React.Alert.alert('Aviso','Não foi possível conectar aos nossos servidores, sem conexão a internet',[{text:'OK'}],{cancelable:false});}if(error.response.status===403){}if(error.response.status===401){var requestConfig=error.config;return axios(requestConfig);}return Promise.reject(error);});export default api;","map":{"version":3,"sources":["/home/max/Documentos/microsys/src/services/api.js"],"names":["React","axios","api","create","baseURL","headers","interceptors","response","use","error","request","_hasError","_response","includes","Alert","alert","text","cancelable","status","requestConfig","config","Promise","reject"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAa,CACvBC,OAAO,CAAE,8CADc,CACkC;AACzDC,OAAO,CAAE,CACP,SAAU,KADH,CAEP,eAAgB,iCAFT,CAFc,CAAb,CAAZ,CAQAH,GAAG,CAACI,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACE,SAAAD,QAAQ,CAAI,CACV;AACA,MAAOA,CAAAA,QAAP,CACD,CAJH,CAKE,SAAAE,KAAK,CAAI,CACP;AACA;AACA;AACA,GACEA,KAAK,CAACC,OAAN,CAAcC,SAAd,GAA4B,IAA5B,EACAF,KAAK,CAACC,OAAN,CAAcE,SAAd,CAAwBC,QAAxB,CAAiC,SAAjC,CAFF,CAGE,CACAb,KAAK,CAACc,KAAN,CAAYC,KAAZ,CACE,OADF,CAEE,yEAFF,CAGE,CAAE,CAAEC,IAAI,CAAE,IAAR,CAAF,CAHF,CAIE,CAAEC,UAAU,CAAE,KAAd,CAJF,EAMD,CACD,GAAGR,KAAK,CAACF,QAAN,CAAeW,MAAf,GAA0B,GAA7B,CAAkC,CACjC,CAED,GAAIT,KAAK,CAACF,QAAN,CAAeW,MAAf,GAA0B,GAA9B,CAAmC,CACjC,GAAMC,CAAAA,aAAa,CAAGV,KAAK,CAACW,MAA5B,CACA,MAAOnB,CAAAA,KAAK,CAACkB,aAAD,CAAZ,CACD,CAED,MAAOE,CAAAA,OAAO,CAACC,MAAR,CAAeb,KAAf,CAAP,CACD,CA7BH,EAgCA,cAAeP,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.labmicrocba.com.br/microsys/test', //BaseUrl server\n  headers: {\n    'Accept': '*/*',\n    'Content-Type': 'application/json; charset=utf-8'\n  },\n})\n\napi.interceptors.response.use(\n  response => {\n    // Do something with response data\n    return response\n  },\n  error => {\n    // Do something with response error\n    // You can even test for a response code\n    // and try a new request before rejecting the promise\n    if (\n      error.request._hasError === true &&\n      error.request._response.includes('connect')\n    ) {\n      React.Alert.alert(\n        'Aviso',\n        'Não foi possível conectar aos nossos servidores, sem conexão a internet',\n        [ { text: 'OK' } ],\n        { cancelable: false },\n      )\n    }\n    if(error.response.status === 403 ){\n    }\n\n    if (error.response.status === 401) {\n      const requestConfig = error.config\n      return axios(requestConfig)\n    }\n\n    return Promise.reject(error)\n  },\n)\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}