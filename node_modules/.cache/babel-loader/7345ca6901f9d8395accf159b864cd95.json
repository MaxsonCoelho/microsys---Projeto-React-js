{"ast":null,"code":"var _jsxFileName = \"/home/max/Documentos/microsys/src/components/Search/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport './search.css';\nimport SearchIcon from '@mui/icons-material/Search';\nimport api from '../../services/api';\nimport { AuthContext } from '../../contexts/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search({\n  setDataFungic,\n  setDataBactery\n}) {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const [search, setSearch] = useState('');\n\n  async function searchFunction() {\n    try {\n      if (setDataFungic) {\n        const response = await api.get(`/fungos/search?q=${search}`, {\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n            'Accept': '*/*'\n          }\n        });\n        let result = response.data;\n        setDataFungic(result.reverse());\n      } else if (setDataBactery) {\n        const response = await api.get(`/bacterias/search?q=${search}`, {\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n            'Accept': '*/*'\n          }\n        });\n        let result = response.data;\n        setDataBactery(result.reverse());\n      }\n    } catch (error) {\n      alert('Erro na listagem de coleções fúngicas, verifique sua conexão com a internet.');\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"divBusca\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"txtBusca\",\n      onChange: e => setSearch(e.target.value),\n      placeholder: \"Buscar...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n      id: \"search\",\n      onClick: searchFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"197h/Wxez3cE2iz1SjHCKAk6huM=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/max/Documentos/microsys/src/components/Search/index.js"],"names":["React","useState","useContext","SearchIcon","api","AuthContext","Search","setDataFungic","setDataBactery","token","search","setSearch","searchFunction","response","get","headers","result","data","reverse","error","alert","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAhB,EAAmD;AAAA;;AAC9D,QAAM;AAAEC,IAAAA;AAAF,MAAYP,UAAU,CAACG,WAAD,CAA5B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,iBAAeW,cAAf,GAA+B;AAE3B,QAAG;AAED,UAAGL,aAAH,EAAiB;AACf,cAAMM,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAS,oBAAmBJ,MAAO,EAAnC,EAAqC;AAC1DK,UAAAA,OAAO,EAAC;AACN,4BAAgB,kBADV;AAEN,6BAAkB,UAASN,KAAM,EAF3B;AAGN,sBAAU;AAHJ;AADkD,SAArC,CAAvB;AAQA,YAAIO,MAAM,GAAGH,QAAQ,CAACI,IAAtB;AACAV,QAAAA,aAAa,CAACS,MAAM,CAACE,OAAP,EAAD,CAAb;AACD,OAXD,MAWM,IAAGV,cAAH,EAAkB;AACtB,cAAMK,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAJ,CAAS,uBAAsBJ,MAAO,EAAtC,EAAwC;AAC7DK,UAAAA,OAAO,EAAC;AACN,4BAAgB,kBADV;AAEN,6BAAkB,UAASN,KAAM,EAF3B;AAGN,sBAAU;AAHJ;AADqD,SAAxC,CAAvB;AAQA,YAAIO,MAAM,GAAGH,QAAQ,CAACI,IAAtB;AACAT,QAAAA,cAAc,CAACQ,MAAM,CAACE,OAAP,EAAD,CAAd;AACD;AACF,KAzBD,CA0BA,OAAMC,KAAN,EAAY;AACVC,MAAAA,KAAK,CAAC,8EAAD,CAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACJ;;AAGD,sBACI;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,UAAtB;AAAiC,MAAA,QAAQ,EAAEI,CAAC,IAAIZ,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzD;AAA2E,MAAA,WAAW,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA9CuBN,M;;KAAAA,M","sourcesContent":["import React, { useState, useContext } from 'react';\nimport './search.css';\nimport SearchIcon from '@mui/icons-material/Search';\nimport api from '../../services/api';\nimport { AuthContext } from '../../contexts/auth';\n\nexport default function Search({ setDataFungic, setDataBactery }) {\n    const { token } = useContext(AuthContext);\n    const [search, setSearch] = useState('');\n\n    async function searchFunction(){\n\n        try{\n          \n          if(setDataFungic){\n            const response = await api.get(`/fungos/search?q=${search}`,{\n              headers:{\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n                'Accept': '*/*'\n              }\n            });\n        \n            let result = response.data;\n            setDataFungic(result.reverse());\n          }else if(setDataBactery){\n            const response = await api.get(`/bacterias/search?q=${search}`,{\n              headers:{\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n                'Accept': '*/*'\n              }\n            });\n        \n            let result = response.data;\n            setDataBactery(result.reverse());\n          }\n        }\n        catch(error){\n          alert('Erro na listagem de coleções fúngicas, verifique sua conexão com a internet.')\n          console.log(error);\n        }\n    }\n\n\n    return (\n        <div id=\"divBusca\">\n            <input type=\"text\" id=\"txtBusca\" onChange={e => setSearch(e.target.value)} placeholder=\"Buscar...\"/>\n            <SearchIcon id=\"search\" onClick={searchFunction} />  \n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}